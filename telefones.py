# -*- coding: utf-8 -*-
"""telefones.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10xZBJ2nAPp9MVs9ZGgXRIMoDJJRRHwpY
"""

# Importando as bibliotecas necessárias
import pandas as pd
import numpy as np

# Carregando um DataFrame de exemplo
data = {
    'cpf': [204196, 1278177, 4373286, 5226279, 13365177],
    'contato_principal': ['(63) 0992024070', '(66) 0996773171', '(69) 0984555001', '(69) 0984069956', '(66) 0992266300'],
    'contato_secundario': [np.nan, np.nan, np.nan, np.nan, np.nan]
}

df = pd.DataFrame(data)

# Exibindo o DataFrame original
print("DataFrame Original:")
print(df)

# Contando e exibindo informações sobre os CPFs antes das modificações
total_cpfs = df['cpf'].count()
cpfs_unicos = df['cpf'].nunique()
print(f'\nTotal de CPFs antes das modificações: {total_cpfs}')
print(f'Número de CPFs distintos antes das modificações: {cpfs_unicos}')

# Ordenando o DataFrame por 'cpf' e 'contato_principal'
df = df.sort_values(['cpf', 'contato_principal'])

# Criando uma nova coluna 'contato_terciario' com valores NaN
df['contato_terciario'] = np.nan

# Identificando os índices dos CPFs duplicados
indices_duplicados = df[df.duplicated('cpf', keep=False)].index

# Iterando sobre os índices dos CPFs duplicados
for i in range(0, len(indices_duplicados) - 1, 2):
    # Obtendo o índice do segundo contato do mesmo CPF
    indice_segundo_contato = indices_duplicados[i+1]

    # Movendo o segundo contato para a coluna 'contato_terciario'
    df.loc[indices_duplicados[i], 'contato_terciario'] = df.loc[indice_segundo_contato, 'contato_principal']

    # Removendo a linha com o segundo contato
    df = df.drop(indice_segundo_contato)

# Resetando o índice do DataFrame
df = df.reset_index(drop=True)

# Exibindo o DataFrame modificado
print("\nDataFrame Modificado:")
print(df)

# Exibindo informações sobre os CPFs depois das modificações
total_cpfs = df['cpf'].count()
cpfs_unicos = df['cpf'].nunique()
print(f'\nTotal de CPFs depois das modificações: {total_cpfs}')
print(f'Número de CPFs distintos depois das modificações: {cpfs_unicos}')

# Salvando o DataFrame modificado em um arquivo CSV (opcional)
# df.to_csv('contatos.csv', sep=';', index=False)